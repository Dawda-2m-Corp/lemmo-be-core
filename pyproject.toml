[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "lemmo-be-core"
version = "0.1.0"
description = "Lemmo Backend Core Package - Essential utilities, models, and GraphQL infrastructure"
readme = "README.md"
license = { text = "MIT" }
authors = [{ name = "2MCorp", email = "contact@2mcorp.com" }]
maintainers = [{ name = "2MCorp", email = "contact@2mcorp.com" }]
keywords = [
    "django",
    "graphql",
    "core",
    "utilities",
    "models",
    "authentication",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Framework :: Django",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]
requires-python = ">=3.10"
dependencies = [
    "django>=4.2,<5.0",
    "graphene-django>=3.0,<4.0",
    "pyyaml>=6.0,<7.0",
    "typing-extensions>=4.0,<5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0,<8.0",
    "pytest-django>=4.0,<5.0",
    "black>=23.0,<24.0",
    "flake8>=6.0,<7.0",
    "mypy>=1.0,<2.0",
    "types-PyYAML>=6.0,<7.0",
]
test = ["pytest>=7.0,<8.0", "pytest-django>=4.0,<5.0", "factory-boy>=3.0,<4.0"]

[project.urls]
Homepage = "https://github.com/2mcorp/lemmo-be-core"
Documentation = "https://github.com/2mcorp/lemmo-be-core#readme"
Repository = "https://github.com/2mcorp/lemmo-be-core"
"Bug Tracker" = "https://github.com/2mcorp/lemmo-be-core/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["core*"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["core"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["django.*", "graphene.*", "yaml.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["core/tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["core"]
omit = ["*/tests/*", "*/migrations/*", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
